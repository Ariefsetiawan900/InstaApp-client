[{"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/index.js":"1","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/App.js":"2","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/reportWebVitals.js":"3","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/Navbar.js":"4","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Signin.js":"5","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Login.js":"6","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Home.js":"7","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Profile.js":"8","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Signup.js":"9","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/CreatePost.js":"10","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/reducers/userReducer.js":"11","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/UserProfile.js":"12","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/SubscribeUserPost.js":"13"},{"size":502,"mtime":1610369569933,"results":"14","hashOfConfig":"15"},{"size":2011,"mtime":1615835844618,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610316862593,"results":"17","hashOfConfig":"15"},{"size":1394,"mtime":1615835850418,"results":"18","hashOfConfig":"15"},{"size":2287,"mtime":1611188017052,"results":"19","hashOfConfig":"15"},{"size":447,"mtime":1610387805480,"results":"20","hashOfConfig":"15"},{"size":5564,"mtime":1615836215283,"results":"21","hashOfConfig":"15"},{"size":3962,"mtime":1616183770286,"results":"22","hashOfConfig":"15"},{"size":3340,"mtime":1615873112684,"results":"23","hashOfConfig":"15"},{"size":2756,"mtime":1610668468099,"results":"24","hashOfConfig":"15"},{"size":475,"mtime":1616142826305,"results":"25","hashOfConfig":"15"},{"size":4776,"mtime":1615871257732,"results":"26","hashOfConfig":"15"},{"size":5567,"mtime":1615836230803,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ex7ftr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/index.js",[],["63","64"],"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/App.js",["65","66"],"import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/Signin\";\nimport Login from \"./components/screens/Login\";\nimport Profile from \"./components/screens/Profile\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport UserProfile  from './components/screens/UserProfile'\nimport SubscribeUserPost from './components/screens/SubscribeUserPost'\nimport { reducer, initialState } from \"./reducers/userReducer\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // console.log(typeof(user),user);\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      \n    } else {\n      history.push(\"/signin\");\n    }\n  },[]);\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/create\">\n        <CreatePost />\n      </Route>\n\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n\n      <Route path=\"/myfollowingpost\">\n        <SubscribeUserPost/>\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <Navbar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/reportWebVitals.js",[],"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/Navbar.js",[],"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Signin.js",["67","68","69"],"import React, { useState,useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from '../../App'\nimport M from \"materialize-css\";\n\nconst Signin = () => {\n  const {state,dispatch} =useContext(UserContext)\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const PostData = () => {\n    if (\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        email\n      )\n    ) {\n      M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" });\n      return;\n    }\n    fetch(\"/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        if (data.error) {\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n        } else {\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n          dispatch({type:\"USER\",payload:data.user})\n          M.toast({\n            html: \"signedin Success\",\n            classes: \"#43a047 green darken-1\",\n          });\n          history.push(\"/\");\n        }\n        // console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"mycard\">\n      <div className=\"card  auth-card input-field\">\n        <h2>InstaApp</h2>\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button\n          className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n          onClick={() => PostData()}\n        >\n          Login\n        </button>\n        <h5>\n          <Link to=\"/signup\">Dont have an account ?</Link>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Signin;\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Login.js",[],"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Home.js",["70","71","72","73","74","75"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"allpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        setData(result.posts);\n      });\n  }, []);\n\n  const likePost = (id) => {\n    fetch(\"/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const unLikePost = (id) => {\n    fetch(\"/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deletePost = (postId) => {\n    fetch(`/deletepost/${postId}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newData = data.filter((item) => {\n          return item._id !== result._id;\n        });\n        setData(newData);\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      {data.map((item) => {\n        return (\n          <div className=\"card home-card\" key={`createPost-${item._id}`}>\n            <h5 style={{padding:\"5px\"}}>\n              <Link\n                to={\n                  item.postedBy._id !== state._id\n                    ? \"/profile/\" + item.postedBy._id\n                    : \"/profile/\"\n                }\n              >\n                {item.postedBy.name}\n              </Link>{\" \"}\n              {item.postedBy._id == state._id && (\n                <i\n                  className=\"material-icons\"\n                  style={{ float: \"right\" }}\n                  onClick={() => deletePost(item._id)}\n                >\n                  delete\n                </i>\n              )}\n            </h5>\n            <div className=\"card-image\">\n              <img src={item.photo} alt=\"card-image\" />\n            </div>\n            <div className=\"card-content\">\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\n                favorite\n              </i>\n              {item.likes.includes(state._id) ? (\n                <i\n                  className=\"material-icons\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    unLikePost(item._id);\n                  }}\n                >\n                  thumb_down\n                </i>\n              ) : (\n                <i\n                  className=\"material-icons\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    likePost(item._id);\n                  }}\n                >\n                  thumb_up\n                </i>\n              )}\n              {item.likes.length >= 1 && <h6>{item.likes.length} Likes </h6>}\n              {/* <h6>{item.likes.length} Likes</h6> */}\n\n              <h6>{item.title}</h6>\n              <p>{item.body}</p>\n              {item.comments.map((record) => {\n                return (\n                  <h6 key={`Comments-${record._id}`}>\n                    <span style={{ fontWeight: \"500\" }}>\n                      {record.postedBy.name}{\" \"}\n                    </span>\n                    {record.text}\n                  </h6>\n                );\n              })}\n\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  makeComment(e.target[0].value, item._id);\n                }}\n              >\n                <input type=\"text\" placeholder=\"add a comment\" />\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Profile.js",["76","77"],"/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/Signup.js",["78","79","80"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst Signup = () => {\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(undefined);\n  \n\n  useEffect(() => {\n    if (url) {\n      uploadFields();\n    }\n  }, [url]);\n\n  const uploadPic = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"InstaApp\");\n    data.append(\"cloud_name\", \"de212vzlc\");\n    fetch(\"https://api.cloudinary.com/v1_1/de212vzlc/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setUrl(data.url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const uploadFields = () => {\n    if (\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        email\n      )\n    ) {\n      M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" });\n      return;\n    }\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        pic: url,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.error) {\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n        } else {\n          M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\n          history.push(\"/signin\");\n        }\n        // console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const PostData = () => {\n    if (image) {\n      uploadPic();\n    } else {\n      uploadFields();\n    }\n  };\n\n  return (\n    <div className=\"mycard\">\n      <div className=\"card  auth-card input-field\">\n        <h2>InstaApp</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <div className=\"file-field input-field\">\n          <div className=\"btn #64b5f6 blue darken-1\">\n            <span>Upload Pic</span>\n            <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input className=\"file-path validate\" type=\"text\" />\n          </div>\n        </div>\n\n        <button\n          className=\"btn waves-effect waves-light #64b5f6 blue darken-1 \"\n          onClick={() => PostData()}\n        >\n          SignUp\n        </button>\n        <h5>\n          <Link to=\"/signin\">Already have an account ?</Link>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/CreatePost.js",["81"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst CreatePost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      fetch(\"/createpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) {\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n          } else {\n            M.toast({\n              html: \"create post successfully\",\n              classes: \"#43a047 green darken-1\",\n            });\n            history.push(\"/\");\n          }\n          // console.log(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"InstaApp\");\n    data.append(\"cloud_name\", \"de212vzlc\");\n    fetch(\"https://api.cloudinary.com/v1_1/de212vzlc/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setUrl(data.url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div\n      className=\"card input-filed\"\n      style={{\n        //   marginTop:\"20px\",\n        margin: \"30px auto\",\n        maxWidth: \"500px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"body\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n      />\n      <div className=\"file-field input-field\">\n        <div className=\"btn #64b5f6 blue darken-1\">\n          <span>Upload Image</span>\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n        </div>\n        <div className=\"file-path-wrapper\">\n          <input className=\"file-path validate\" type=\"text\" />\n        </div>\n      </div>\n      <button\n        className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n        onClick={() => postDetails()}\n      >\n        Submit Post\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/reducers/userReducer.js",["82","83","84","85"],"export const initialState = null;\n\nexport const reducer = (state, action) => {\n  if (action.type == \"USER\") {\n    return action.payload;\n  }\n  if (action.type == \"CLEAR\") {\n    return null;\n  }\n  if (action.type == \"UPDATE\") {\n    return {\n      ...state,\n      followers: action.payload.followers,\n      following: action.payload.following,\n    };\n  }\n  if (action.type == \"UPDATEPIC\") {\n    return {\n      ...state,\n      pic: action.payload,\n    };\n  }\n  return state;\n};\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/UserProfile.js",["86","87"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useParams } from \"react-router-dom\";\n\nconst Profile = () => {\n  const [userProfile, setProfile] = useState(null);\n  const { state, dispatch } = useContext(UserContext);\n  const { userid } = useParams();\n  const [showFollow, setShowFollow] = useState(\n    state ? !state.following.includes(userid) : true\n  );\n  //   console.log(userid);\n\n  useEffect(() => {\n    fetch(`/user/${userid}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        setProfile(result);\n      });\n  }, []);\n\n  const followUser = () => {\n    fetch(\"/follow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        followId: userid,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        dispatch({\n          type: \"UPDATE\",\n          payload: { following: data.following, followers: data.followers },\n        });\n        localStorage.getItem(\"user\", JSON.stringify(data));\n        setProfile((prevState) => {\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: [...prevState.user.followers, data._id],\n            },\n          };\n        });\n        setShowFollow(false);\n      });\n  };\n\n  const unFollowUser = () => {\n    fetch(\"/unfollow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        unfollowId: userid,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        dispatch({\n          type: \"UPDATE\",\n          payload: { following: data.following, followers: data.followers },\n        });\n        localStorage.getItem(\"user\", JSON.stringify(data));\n        setProfile((prevState) => {\n          const newFollower = prevState.user.followers.filter(\n            (item) => item != data._id\n          );\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: newFollower,\n            },\n          };\n        });\n        setShowFollow(true);\n      });\n  };\n\n  return (\n    <>\n      {userProfile ? (\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              margin: \"18px 0px\",\n              borderBottom: \"1px solid gray\",\n            }}\n          >\n            <div>\n              <img\n                style={{\n                  width: \"160px\",\n                  height: \"160px\",\n                  borderRadius: \"80px\",\n                }}\n                src={userProfile.user.pic}\n                alt=\"profile\"\n              />\n            </div>\n            <div>\n              <h4>{userProfile.user.name}</h4>\n              <h5>{userProfile.user.email}</h5>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  width: \"108%\",\n                }}\n              >\n                <h5>{userProfile.posts.length} post</h5>\n                <h5>{userProfile.user.followers.length} followers</h5>\n                <h5>{userProfile.user.following.length} following</h5>\n              </div>\n              {showFollow ? (\n                <button\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                  onClick={() => followUser()}\n                  style={{ margin: \"10px\" }}\n                >\n                  Follow\n                </button>\n              ) : (\n                <button\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                  onClick={() => unFollowUser()}\n                  style={{ margin: \"10px\" }}\n                >\n                  unFollow\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gallery\">\n            {userProfile.posts.map((item) => {\n              return (\n                <img\n                  key={`profileImg-${item._id}`}\n                  className=\"item\"\n                  src={item.photo}\n                  alt={item.title}\n                />\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <h2>Loading....!</h2>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","/Users/ariefsetiawan/Documents/tes/InstaApp/client/src/components/screens/SubscribeUserPost.js",["88","89","90","91","92","93"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"getsubpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        setData(result.posts);\n      });\n  }, []);\n\n  const likePost = (id) => {\n    fetch(\"/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const unLikePost = (id) => {\n    fetch(\"/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newData = data.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deletePost = (postId) => {\n    fetch(`/deletepost/${postId}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newData = data.filter((item) => {\n          return item._id !== result._id;\n        });\n        setData(newData);\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      {data.map((item) => {\n        return (\n          <div className=\"card home-card\" key={`createPost-${item._id}`}>\n            <h5 style={{padding:\"5px\"}}>\n              <Link\n                to={\n                  item.postedBy._id !== state._id\n                    ? \"/profile/\" + item.postedBy._id\n                    : \"/profile/\"\n                }\n              >\n                {item.postedBy.name}\n              </Link>{\" \"}\n              {item.postedBy._id == state._id && (\n                <i\n                  className=\"material-icons\"\n                  style={{ float: \"right\" }}\n                  onClick={() => deletePost(item._id)}\n                >\n                  delete\n                </i>\n              )}\n            </h5>\n            <div className=\"card-image\">\n              <img src={item.photo} alt=\"card-image\" />\n            </div>\n            <div className=\"card-content\">\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\n                favorite\n              </i>\n              {item.likes.includes(state._id) ? (\n                <i\n                  className=\"material-icons\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    unLikePost(item._id);\n                  }}\n                >\n                  thumb_down\n                </i>\n              ) : (\n                <i\n                  className=\"material-icons\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    likePost(item._id);\n                  }}\n                >\n                  thumb_up\n                </i>\n              )}\n              {item.likes.length >= 1 && <h6>{item.likes.length} Likes </h6>}\n              {/* <h6>{item.likes.length} Likes</h6> */}\n\n              <h6>{item.title}</h6>\n              <p>{item.body}</p>\n              {item.comments.map((record) => {\n                return (\n                  <h6 key={`Comments-${record._id}`}>\n                    <span style={{ fontWeight: \"500\" }}>\n                      {record.postedBy.name}{\" \"}\n                    </span>\n                    {record.text}\n                  </h6>\n                );\n              })}\n\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  makeComment(e.target[0].value, item._id);\n                }}\n              >\n                <input type=\"text\" placeholder=\"add a comment\" />\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":20,"column":11,"nodeType":"100","messageId":"101","endLine":20,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":30,"column":5,"nodeType":"104","endLine":30,"endColumn":7,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":15,"column":18,"nodeType":"108","messageId":"109","endLine":15,"endColumn":19,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"107","line":15,"column":43,"nodeType":"108","messageId":"109","endLine":15,"endColumn":44,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"112","line":7,"column":18,"nodeType":"100","messageId":"101","endLine":7,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":36,"column":24,"nodeType":"115","messageId":"116","endLine":36,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":64,"column":24,"nodeType":"115","messageId":"116","endLine":64,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":93,"column":24,"nodeType":"115","messageId":"116","endLine":93,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":138,"column":34,"nodeType":"115","messageId":"116","endLine":138,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":149,"column":15,"nodeType":"119","endLine":149,"endColumn":56},{"ruleId":"102","severity":1,"message":"120","line":21,"column":6,"nodeType":"104","endLine":21,"endColumn":8,"suggestions":"121"},{"ruleId":"102","severity":1,"message":"122","line":67,"column":6,"nodeType":"104","endLine":67,"endColumn":13,"suggestions":"123"},{"ruleId":"102","severity":1,"message":"124","line":19,"column":6,"nodeType":"104","endLine":19,"endColumn":11,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"107","line":42,"column":18,"nodeType":"108","messageId":"109","endLine":42,"endColumn":19,"suggestions":"126"},{"ruleId":"106","severity":1,"message":"107","line":42,"column":43,"nodeType":"108","messageId":"109","endLine":42,"endColumn":44,"suggestions":"127"},{"ruleId":"102","severity":1,"message":"128","line":43,"column":6,"nodeType":"104","endLine":43,"endColumn":11,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"114","line":4,"column":19,"nodeType":"115","messageId":"116","endLine":4,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":7,"column":19,"nodeType":"115","messageId":"116","endLine":7,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":10,"column":19,"nodeType":"115","messageId":"116","endLine":10,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":17,"column":19,"nodeType":"115","messageId":"116","endLine":17,"endColumn":21},{"ruleId":"102","severity":1,"message":"130","line":25,"column":6,"nodeType":"104","endLine":25,"endColumn":8,"suggestions":"131"},{"ruleId":"113","severity":1,"message":"132","line":80,"column":28,"nodeType":"115","messageId":"116","endLine":80,"endColumn":30},{"ruleId":"98","severity":1,"message":"112","line":7,"column":18,"nodeType":"100","messageId":"101","endLine":7,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":36,"column":24,"nodeType":"115","messageId":"116","endLine":36,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":64,"column":24,"nodeType":"115","messageId":"116","endLine":64,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":93,"column":24,"nodeType":"115","messageId":"116","endLine":93,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":138,"column":34,"nodeType":"115","messageId":"116","endLine":138,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":149,"column":15,"nodeType":"119","endLine":149,"endColumn":56},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["135"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["136","137"],["138","139"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["142"],["143","144"],["145","146"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["148"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},{"messageId":"151","fix":"157","desc":"153"},{"messageId":"154","fix":"158","desc":"156"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"messageId":"151","fix":"165","desc":"153"},{"messageId":"154","fix":"166","desc":"156"},{"messageId":"151","fix":"167","desc":"153"},{"messageId":"154","fix":"168","desc":"156"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [dispatch, history]",{"range":"173","text":"174"},"removeEscape",{"range":"175","text":"176"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"177","text":"178"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"179","text":"176"},{"range":"180","text":"178"},"Update the dependencies array to be: [state]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"183","text":"184"},"Update the dependencies array to be: [uploadFields, url]",{"range":"185","text":"186"},{"range":"187","text":"176"},{"range":"188","text":"178"},{"range":"189","text":"176"},{"range":"190","text":"178"},"Update the dependencies array to be: [body, history, title, url]",{"range":"191","text":"192"},"Update the dependencies array to be: [userid]",{"range":"193","text":"194"},[1121,1123],"[dispatch, history]",[429,430],"",[429,429],"\\",[454,455],[454,454],[585,587],"[state]",[2004,2011],"[dispatch, image, state]",[484,489],"[uploadFields, url]",[1038,1039],[1038,1038],[1063,1064],[1063,1063],[1172,1177],"[body, history, title, url]",[734,736],"[userid]"]